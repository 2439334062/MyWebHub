@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>

    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style>
        .nav_wrap {
            height: 400px;
            width: 1000px;
            overflow: hidden;
            border: 1px solid #ccc;
            margin: 20px auto;
        }

        .nav_ul {
            height: 100%;
            width: 1020px;
            overflow-y: auto;
            overflow-x: hidden;
        }

        .nav_li {
            border: 1px solid #ccc;
            margin: -1px;
            line-height: 40px;
            width: 1000px;
        }
    </style>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.1.js"></script>
    <!--自动生成代理类 -->
    <script src="/signalr/hubs"></script>
    <!--手动引入代理类 -->
    @*<script src="~/Scripts/AutoProxy.js"></script>*@
    <script type="text/javascript">
        $(function () {

            //一. 初始化信息
            //默认路径
            //1. 与服务器路径进行匹配
            var conn = $.connection.hub;
            //2. 与生成的代理类建立连接
            var proxy = $.connection.mySpecHub1;
            //3.当服务器端指定路径的时候，需要有下面的代码进行匹配（仅使用手动代理）
            //conn.url = "/myhub1";

             conn.start().done(function () {
                    $("#j_notice").html("连接成功");
                }).fail(function () {
                    console.log('Could not connect');
                });


            //二. 定义客户端的方法
            //1 接受用户登录成功后的提示
            proxy.client.LoginSuccessNotice = function (data, connectionId) {
                $("#j_Msg").append("<li class=nav_li>" + data + "</li>");

            };
            //2 接收点对点用户发送来的消息
            proxy.client.receiveMsg = function (data) {
                $("#j_Msg").append("<li class=nav_li>" + data + "</li>");
            }
            //3. 接收自己的connectionId
            proxy.client.ReceiveOwnCid = function (connectionId) {
                //把用户ConnectionID存起来
                $("#j_connectionId").val(connectionId);
            }


            //三. 主动事件
            //1.建立连接
            $("#j_connect").click(function () {
                conn.start().done(function () {
                    $("#j_notice").html("连接成功");
                }).fail(function () {
                    console.log('Could not connect');
                });
            });
            //2.断开连接
            $("#j_close").click(function () {
                conn.stop();
            });
            //3.点对点发送消息
            $("#j_send").click(function () {
                var state = conn.state;
                if (state == 1) {
                    //调用服务器端方法
                    proxy.server.sendSingleMsg($("#j_receiveId").val(), $("#j_content").val());
                } else if (state == 0) {
                    $("#j_notice").html("正在连接中，请稍等");
                } else if (state == 2) {
                    $("#j_notice").html("正在重连，请稍等");
                } else if (state == 4) {
                    $("#j_notice").html("掉线了，请重新连接");
                }

            });
            //4.群发消息
            $("#j_sendAll").click(function () {
                var state = conn.state;
                if (state == 1) {
                    //调用服务器端方法
                    proxy.server.SendAllMsg($("#j_content").val());
                } else if (state == 0) {
                    $("#j_notice").html("正在连接中，请稍等");
                } else if (state == 2) {
                    $("#j_notice").html("正在重连，请稍等");
                } else if (state == 4) {
                    $("#j_notice").html("掉线了，请重新连接");
                }

            });
            //5.进入room1
            $("#j_room1").click(function () {
                //调用服务器端方法
                proxy.server.EnterRoom("room1");
            });
            //6.进入room2
            $("#j_room2").click(function () {
                //调用服务器端方法
                proxy.server.EnterRoom("room2");
            });
            //7. 给room1中的用户发送消息
            $("#j_sendRoom1").click(function () {
                proxy.server.SendRoomNameMsg("room1", $('#j_content2').val());
            });
            //8. 给room2中的用户发送消息
            $("#j_sendRoom2").click(function () {
                proxy.server.SendRoomNameMsg("room2", $('#j_content2').val());
            });

            //9. 调用控制器中的方法发送信息
            $("#j_btn").click(function () {
                var myConnectionId = $("#j_connectionId").val();
                var msg = $('#j_content3').val();
                console.log(myConnectionId);
                $.post("/Hub/MySendAll", { myConnectionId: myConnectionId, msg: msg }, function (data) {
                    if (data == "ok") {
                        alert("发送成功");
                    }
                });

            });

            //10.调用控制器中的方法来登录
            $("#j_login").click(function () {
                var myConnectionId = $("#j_connectionId").val();
                var UserName = $('#UserName').val();
                alert(UserName);
                var PassWord = $('#PassWord').val();
                console.log(myConnectionId);
                $.post("/Hub/MyLogin", { myConnectionId: myConnectionId, UserName: UserName, PassWord: PassWord }, function (data) {
                    if (data == "ok") {
                     
                        alert("登录成功");
                    } else {
                        alert("账号或密码错误");
                    } 
                });
            });


            //通过查询数据库里面的connectionId发送数据
             $("#j_send1").click(function () {
                var state = conn.state;
                if (state == 1) {
                    //调用服务器端方法
                    proxy.server.sendConnIdMsg($("#j_userid").val(), $("#j_content1").val());
                } else if (state == 0) {
                    $("#j_notice").html("正在连接中，请稍等");
                } else if (state == 2) {
                    $("#j_notice").html("正在重连，请稍等");
                } else if (state == 4) {
                    $("#j_notice").html("掉线了，请重新连接");
                }

            });

              //把聊天数据存数据库
             $("#j_send2").click(function () {
                var state = conn.state;
                if (state == 1) {
                    //调用服务器端方法
                    proxy.server.sendConnIdDataMsg($("#j_userid").val(), $("#j_content1").val());
                } else if (state == 0) {
                    $("#j_notice").html("正在连接中，请稍等");
                } else if (state == 2) {
                    $("#j_notice").html("正在重连，请稍等");
                } else if (state == 4) {
                    $("#j_notice").html("掉线了，请重新连接");
                }
                    
            });
            

            // 发起添加好友的申请
            $("#j_addfriends").click(function () {
                var state = conn.state;
                  if (state == 1) {
                    //调用服务器端方法
                    proxy.server.addFriends($("#j_userid2").val());
                } else if (state == 0) {
                    $("#j_notice").html("正在连接中，请稍等");
                } else if (state == 2) {
                    $("#j_notice").html("正在重连，请稍等");
                } else if (state == 4) {
                    $("#j_notice").html("掉线了，请重新连接");
                }
            })

              //2 接收点对点用户发送来的消息
            proxy.client.receiveList = function (data) {
                $("#j_Msg").append("<li class=nav_li>" + data + "</li>");
            }
            $("#j_list").click(function () {
                var state = conn.state;
                  if (state == 1) {
                    //调用服务器端方法
                    proxy.server.getChatList($("#j_userid").val());
                } else if (state == 0) {
                    $("#j_notice").html("正在连接中，请稍等");
                } else if (state == 2) {
                    $("#j_notice").html("正在重连，请稍等");
                } else if (state == 4) {
                    $("#j_notice").html("掉线了，请重新连接");
                }
            })



            //四. 监控事件
            //1. 连接断开的方法
            conn.disconnected(function () {
                $("#j_notice").html("连接中断");
            });




        });
    </script>
</head>
<body>
    <div>
        <div><span>提示：</span><span id="j_notice"></span></div>
        
        <div style="margin-top:20px">
            <button id="j_connect">建立连接</button>
            <button id="j_close">关闭连接</button>
            <form method="post" action="/Hub/LoginUser">
                <p>用户名： <input name="UserName" id="UserName"  type="text" /></p>
                <p>密&nbsp;码： <input name="PassWord" id="PassWord" type="text" /></p>
                <input type="submit" value="登录" />
            </form>  <button id="j_login">登录2</button>

        </div>
        <div style="margin-top:20px">
            <input type="text" id="j_userid2" value="" placeholder="请输入要添加好友的账号" />
            <button id="j_addfriends">添加好友</button>
        </div>

        @*用账号发送消息*@
        <div style="margin-top:20px">
            <input type="text" value="" id="j_userid" placeholder="请输入接收人的账号" />
            <input type="text" value="" placeholder="请输入发送内容" id="j_content1" />
            <button id="j_send1">单发</button>
            <button id="j_send2">存数据库</button>
            <button id="j_list">获取</button>
        </div>
        @*用connecttionId*@
        <div style="margin-top:20px">
            <input type="text" value="" placeholder="请输入接收人的标记" id="j_receiveId" />
            <input type="text" value="" placeholder="请输入发送内容" id="j_content" />
            <button id="j_send">单发</button>
            <button id="j_sendAll">群发</button>
        </div>
        <div style="margin-top:20px">
            <button id="j_room1">进入room1</button>
            <button id="j_room2">进入room2</button>
        </div>
        <div style="margin-top:20px">
            <input type="text" value="" placeholder="请输入发送内容" id="j_content2" />
            <button id="j_sendRoom1">给room1发送消息</button>
            <button id="j_sendRoom2">给room2发送消息</button>
        </div>
        <div style="margin-top:20px">
            <input type="text" value="" placeholder="请输入发送内容" id="j_content3" />
            <button id="j_btn">调用控制器中的方法</button>
        </div>
        <div class="nav_wrap">
            <ul id="j_Msg" class="nav_ul"></ul>
        </div>
    </div>
    <input type="hidden" value="" id="j_connectionId" />
</body>
</html>

